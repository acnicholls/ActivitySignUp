<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ActivitySignUpApi</name>
    </assembly>
    <members>
        <member name="T:ActivitySignUp.Api.Controllers.ActivityController">
            <summary>
            activity controller class
            </summary>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.ActivityController.#ctor(Microsoft.Extensions.Logging.ILogger{ActivitySignUp.Api.Controllers.ActivityController},ActivitySignUp.Services.Interfaces.IActivityService)">
            <summary>
            activity controller ctor
            </summary>
            <param name="logger"></param>
            <param name="service"></param>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.ActivityController.UploadActivityImage">
            <summary>
            saves uploaded file to local folder
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.ActivityController.InsertActivityAsync(ActivitySignUp.Models.Activity.ActivityInsertModel)">
            <summary>
            this method will insert a new activity
            </summary>
            <param name="activity">model containing the values to insert</param>
            <returns>the newly inserted Id</returns>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.ActivityController.GetActivityListAsync">
            <summary>
            this method will get the list of all activities
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.ActivityController.GetInitialActivityViewAsync(System.Int32)">
            <summary>
            this method will get an activity's data for a non-signed up user
            </summary>
            <param name="activityId"></param>
            <returns></returns>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.ActivityController.GetSignedUpActivityViewAsync(System.Int32)">
            <summary>
            this method will get the activity's data for a signed in user
            </summary>
            <param name="activityId"></param>
            <returns></returns>
        </member>
        <member name="T:ActivitySignUp.Api.Controllers.CommentController">
            <summary>
            this controller handles all methods for comments
            </summary>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.CommentController.#ctor(Microsoft.Extensions.Logging.ILogger{ActivitySignUp.Api.Controllers.CommentController},ActivitySignUp.Services.Interfaces.ICommentService)">
            <summary>
            basic ctor
            </summary>
            <param name="logger">the logger</param>
            <param name="service">the comment service</param>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.CommentController.InsertCommentAsync(ActivitySignUp.Models.Comment.CommentInsertModel)">
            <summary>
            this method will insert a new comment
            </summary>
            <param name="comment">the model containing the values of the new record</param>
            <returns>teh newly inserted Id</returns>
        </member>
        <member name="T:ActivitySignUp.Api.Controllers.PersonController">
            <summary>
            this controller handles methods for participants
            </summary>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.PersonController.#ctor(ActivitySignUp.Services.Interfaces.IPersonService,Microsoft.Extensions.Logging.ILogger{ActivitySignUp.Api.Controllers.PersonController})">
            <summary>
            basic ctor
            </summary>
            <param name="service">the person service</param>
            <param name="logger">the logger</param>
        </member>
        <member name="M:ActivitySignUp.Api.Controllers.PersonController.InsertPersonAsync(ActivitySignUp.Models.Person.PersonInsertModel)">
            <summary>
            this method will sign a new user up for an activity
            </summary>
            <param name="person">the model containing the values of the new record</param>
            <returns>the newly inserted Id</returns>
        </member>
        <member name="T:ActivitySignUp.Api.Program">
            <summary>
            the program class
            </summary>
        </member>
        <member name="M:ActivitySignUp.Api.Program.Main(System.String[])">
            <summary>
            the entrypoint
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:ActivitySignUp.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            builds the web host
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:ActivitySignUp.Api.Startup">
            <summary>
             the startup class
            </summary>
        </member>
        <member name="M:ActivitySignUp.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            startup ctor
            </summary>
            <param name="configuration">the application configuration</param>
        </member>
        <member name="P:ActivitySignUp.Api.Startup.Configuration">
            <summary>
            the application configuration
            </summary>
        </member>
        <member name="M:ActivitySignUp.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            this method configures the services container for dependency injection
            </summary>
            <param name="services">the services container from the system's injection process</param>
        </member>
        <member name="M:ActivitySignUp.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            this method will configure the pipeline
            </summary>
            <param name="app">the application to configure</param>
            <param name="env">the environment to configure the application for</param>
        </member>
    </members>
</doc>
